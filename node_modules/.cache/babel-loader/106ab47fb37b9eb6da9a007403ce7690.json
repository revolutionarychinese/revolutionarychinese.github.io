{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dianjin/Documents/revolutionarychinese.github.io/src/mao/mao.js\";\nimport './mao.css';\nimport 'jquery-csv';\nimport pinyin from 'pinyin';\nimport opencc from 'node-opencc';\n\nfunction Word(props) {\n  const style = \"mao\";\n  const single = props.simplified === props.traditional;\n  const length = props.simplified.length;\n  const suffix = single ? `single-${length}` : `${length}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `container clear-space ${style}`,\n    id: props.simplified,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: `simp simp-margin-${suffix} text-size-${suffix}`,\n      children: props.simplified\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), !single ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `comp comp-margin-${suffix} text-size-${suffix}`,\n      children: props.traditional\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `width-${suffix}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pinyin\",\n        children: props.pinyin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `trans trans-margin-${suffix}`,\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: props.trans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n} // ā á ǎ à ō ó ǒ ò ē é ě è ī í ǐ ì ū ú ǔ ù ǖ ǘ ǚ  ǜ  ü\n\n\n_c = Word;\nconst mao_words = [[\"毛泽东\", \"Mao Zedong\"], [\"分析\", \"analysis\"], [\"寻找\", \"seek\"], [\"倾向\", \"political inclination; deviation\"], [\"左倾\", \"left-leaning\"], [\"右倾\", \"right-leaning\"] // [\"机会主义\", \"opportunism\"],\n// [\"农民\", \"farmer\"],\n// [\"党内存在\", \"黨內存在\", \"dǎng nèi cún zài\", \"Within the party\"],\n// [\"此文\", \"此文\", \"cǐ wén\", \"Essay\"],\n// [\"反对\", \"反對\", \"fǎn duì\", \"reject\"],\n];\n\nfunction Mao(props) {\n  var all_words = mao_words;\n  var items = [];\n  var blurbs = [];\n\n  for (const [index, value] of all_words.entries()) {\n    const [simp, trans] = value;\n    const pinyin_str = pinyin(simp).join(\" \");\n    const trad_str = opencc.simplifiedToTraditional(simp);\n    items.push( /*#__PURE__*/_jsxDEV(Word, {\n      simplified: simp,\n      traditional: trad_str,\n      pinyin: pinyin_str,\n      trans: trans\n    }, \"word\" + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this));\n    const trad_part = trad_str === simp ? \" \" : \"（\" + trad_str + \"）\";\n    blurbs.push( /*#__PURE__*/_jsxDEV(\"p\", {\n      children: simp + trad_part + trans\n    }, \"blurb\" + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this));\n  }\n\n  blurbs.reverse();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [items, blurbs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 6\n  }, this);\n}\n\n_c2 = Mao;\nexport default Mao;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"Mao\");","map":{"version":3,"sources":["/Users/dianjin/Documents/revolutionarychinese.github.io/src/mao/mao.js"],"names":["pinyin","opencc","Word","props","style","single","simplified","traditional","length","suffix","trans","mao_words","Mao","all_words","items","blurbs","index","value","entries","simp","pinyin_str","join","trad_str","simplifiedToTraditional","push","trad_part","reverse"],"mappings":"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","sourcesContent":["import './mao.css';\nimport 'jquery-csv';\nimport pinyin from 'pinyin';\nimport opencc from 'node-opencc';\n\nfunction Word(props) {\n\tconst style = \"mao\";\n\tconst single = props.simplified === props.traditional;\n\tconst length = props.simplified.length;\n\tconst suffix = single ? `single-${length}` : `${length}`;\n\treturn (\n\t\t<div className={`container clear-space ${style}`} id={props.simplified}>\n\t\t\t<p className={`simp simp-margin-${suffix} text-size-${suffix}`}>\n\t\t\t\t{props.simplified}\n\t\t\t</p>\n\t\t\t{!single ? <p className={`comp comp-margin-${suffix} text-size-${suffix}`}>\n\t\t\t\t{props.traditional}\n\t\t\t</p> : <div></div>\n\t\t\t}\n\t\t\t<div className={`width-${suffix}`}>\n\t\t\t\t<p className=\"pinyin\">\n\t\t\t\t\t{props.pinyin}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className={`trans trans-margin-${suffix}`}>\n\t\t\t\t<em>\n\t\t\t\t\t{props.trans}\n\t\t\t\t</em>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// ā á ǎ à ō ó ǒ ò ē é ě è ī í ǐ ì ū ú ǔ ù ǖ ǘ ǚ  ǜ  ü\n\nconst mao_words = [\n\t[\"毛泽东\", \"Mao Zedong\"],\n\t[\"分析\", \"analysis\"],\n    [\"寻找\", \"seek\"],\n\t[\"倾向\", \"political inclination; deviation\"],\n\t[\"左倾\", \"left-leaning\"],\n\t[\"右倾\", \"right-leaning\"],\n\t// [\"机会主义\", \"opportunism\"],\n\t// [\"农民\", \"farmer\"],\n\t// [\"党内存在\", \"黨內存在\", \"dǎng nèi cún zài\", \"Within the party\"],\n\t// [\"此文\", \"此文\", \"cǐ wén\", \"Essay\"],\n\t// [\"反对\", \"反對\", \"fǎn duì\", \"reject\"],\n];\n\nfunction Mao(props) {\n\tvar all_words = mao_words;\n\tvar items = []\n\tvar blurbs = []\n\tfor (const [index, value] of all_words.entries()) {\n\t\tconst [simp, trans] = value\n\t\tconst pinyin_str = pinyin(simp).join(\" \")\n\t\tconst trad_str = opencc.simplifiedToTraditional(simp);\n\t\titems.push(\n\t\t\t<Word\n\t\t\t\tkey={\"word\" + index}\n\t\t\t\tsimplified={simp}\n\t\t\t\ttraditional={trad_str}\n\t\t\t\tpinyin={pinyin_str}\n\t\t\t\ttrans={trans}/>\n\t\t);\n\t\tconst trad_part = trad_str === simp ? \" \" : \"（\" + trad_str + \"）\"\n\t\tblurbs.push(\n\t\t\t<p key={\"blurb\" + index}>{simp + trad_part + trans}</p>\n\t\t);\n\t}\n\tblurbs.reverse()\n\treturn (\n    \t<div>\n      \t\t{items}\n\t\t\t{blurbs}\n    \t</div>\n  \t);\n}\n\nexport default Mao;\n"]},"metadata":{},"sourceType":"module"}