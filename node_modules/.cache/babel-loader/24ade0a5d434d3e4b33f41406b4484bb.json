{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dianjin/Documents/revolutionarychinese.github.io/src/words/words.js\";\nimport './words.css';\nimport 'jquery-csv';\n\nfunction Word(props) {\n  const style = \"covid\";\n  const single = props.simplified == props.traditional;\n  const length = props.simplified.length;\n  const suffix = single ? `single-${length}` : `${length}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: `container clear-space ${style}`,\n    id: \"word\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: `simp simp-margin-${suffix} text-size-${suffix}`,\n      children: props.simplified\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), !single ? /*#__PURE__*/_jsxDEV(\"p\", {\n      class: `comp comp-margin-${suffix} text-size-${suffix}`,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: props.traditional\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: `width-${suffix}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"pinyin\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: props.pinyin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: `trans trans-margin-${suffix}`,\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: props.trans\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n} // ā á ǎ à ō ó ǒ ò ē é ě è ī í ǐ ì ū ú ǔ ù ǖ ǘ ǚ  ǜ  ü\n\n\n_c = Word;\nconst covid_words = [[\"新冠\", \"新冠\", \"xīn guān\", \"novel coronavirus\"], [\"新冠病毒\", \"新冠病毒\", \"xīn guān bìng dú\", \"novel coronavirus\"], [\"新冠肺炎\", \"新冠肺炎\", \"xīn guān fèi yán\", \"COVID-19\"], [\"检测\", \"檢測\", \"jiǎn cè\", \"test\"], [\"核酸检测\", \"核酸檢測\", \"hé suān jiǎn cè\", \"test\"], [\"阳性\", \"陽性\", \"yáng xìng\", \"positive (medicine)\"], [\"阴性\", \"隱性\", \"yǐng xìng\", \"negative (medicine)\"]];\n\nfunction Words(props) {\n  var all_words = covid_words;\n  var items = [];\n\n  for (const [index, value] of all_words.entries()) {\n    const [simp, trad, pinyin, trans] = value;\n    items.push( /*#__PURE__*/_jsxDEV(Word, {\n      simplified: simp,\n      traditional: trad,\n      pinyin: pinyin,\n      trans: trans\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 6\n  }, this);\n}\n\n_c2 = Words;\nexport default Words;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"Words\");","map":{"version":3,"sources":["/Users/dianjin/Documents/revolutionarychinese.github.io/src/words/words.js"],"names":["Word","props","style","single","simplified","traditional","length","suffix","pinyin","trans","covid_words","Words","all_words","items","index","value","entries","simp","trad","push"],"mappings":";;AAAA,OAAO,aAAP;AACA,OAAO,YAAP;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACpB,QAAMC,KAAK,GAAG,OAAd;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACI,WAAzC;AACA,QAAMC,MAAM,GAAGL,KAAK,CAACG,UAAN,CAAiBE,MAAhC;AACA,QAAMC,MAAM,GAAGJ,MAAM,GAAI,UAASG,MAAO,EAApB,GAAyB,GAAEA,MAAO,EAAvD;AACA,sBACC;AAAK,IAAA,KAAK,EAAG,yBAAwBJ,KAAM,EAA3C;AAA8C,IAAA,EAAE,EAAC,MAAjD;AAAA,4BACC;AAAG,MAAA,KAAK,EAAG,oBAAmBK,MAAO,cAAaA,MAAO,EAAzD;AAAA,gBACEN,KAAK,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,YADD,EAIE,CAACD,MAAD,gBAAU;AAAG,MAAA,KAAK,EAAG,oBAAmBI,MAAO,cAAaA,MAAO,EAAzD;AAAA,6BACV;AAAA,kBACEN,KAAK,CAACI;AADR;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,YAAV,gBAIM;AAAA;AAAA;AAAA;AAAA,YARR,eAUC;AAAK,MAAA,KAAK,EAAG,SAAQE,MAAO,EAA5B;AAAA,6BACC;AAAG,QAAA,KAAK,EAAC,QAAT;AAAA,+BACC;AAAA,oBACEN,KAAK,CAACO;AADR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAVD,eAiBC;AAAK,MAAA,KAAK,EAAG,sBAAqBD,MAAO,EAAzC;AAAA,6BACC;AAAA,kBACEN,KAAK,CAACQ;AADR;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA,C,CAED;;;KAhCST,I;AAkCT,MAAMU,WAAW,GAAG,CACnB,CAAC,IAAD,EAAM,IAAN,EAAW,UAAX,EAAsB,mBAAtB,CADmB,EAEnB,CAAC,MAAD,EAAQ,MAAR,EAAgB,kBAAhB,EAAoC,mBAApC,CAFmB,EAGnB,CAAC,MAAD,EAAS,MAAT,EAAiB,kBAAjB,EAAqC,UAArC,CAHmB,EAInB,CAAC,IAAD,EAAO,IAAP,EAAa,SAAb,EAAwB,MAAxB,CAJmB,EAKnB,CAAC,MAAD,EAAS,MAAT,EAAiB,iBAAjB,EAAoC,MAApC,CALmB,EAMnB,CAAC,IAAD,EAAO,IAAP,EAAa,WAAb,EAA0B,qBAA1B,CANmB,EAOnB,CAAC,IAAD,EAAO,IAAP,EAAa,WAAb,EAA0B,qBAA1B,CAPmB,CAApB;;AAUA,SAASC,KAAT,CAAeV,KAAf,EAAsB;AACrB,MAAIW,SAAS,GAAGF,WAAhB;AACA,MAAIG,KAAK,GAAG,EAAZ;;AACA,OAAK,MAAM,CAACC,KAAD,EAAQC,KAAR,CAAX,IAA6BH,SAAS,CAACI,OAAV,EAA7B,EAAkD;AACjD,UAAM,CAACC,IAAD,EAAOC,IAAP,EAAaV,MAAb,EAAqBC,KAArB,IAA8BM,KAApC;AACAF,IAAAA,KAAK,CAACM,IAAN,eACC,QAAC,IAAD;AACC,MAAA,UAAU,EAAEF,IADb;AAEC,MAAA,WAAW,EAAEC,IAFd;AAGC,MAAA,MAAM,EAAEV,MAHT;AAIC,MAAA,KAAK,EAAEC;AAJR;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;;AACD,sBACI;AAAA,cACII;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKA;;MAlBQF,K;AAoBT,eAAeA,KAAf","sourcesContent":["import './words.css';\nimport 'jquery-csv';\n\nfunction Word(props) {\n\tconst style = \"covid\";\n\tconst single = props.simplified == props.traditional;\n\tconst length = props.simplified.length;\n\tconst suffix = single ? `single-${length}` : `${length}`;\n\treturn (\n\t\t<div class={`container clear-space ${style}`} id=\"word\">\n\t\t\t<p class={`simp simp-margin-${suffix} text-size-${suffix}`}>\n\t\t\t\t{props.simplified}\n\t\t\t</p>\n\t\t\t{!single ? <p class={`comp comp-margin-${suffix} text-size-${suffix}`}>\n\t\t\t\t<strong>\n\t\t\t\t\t{props.traditional}\n\t\t\t\t</strong>\n\t\t\t</p> : <div></div>\n\t\t\t}\n\t\t\t<div class={`width-${suffix}`}>\n\t\t\t\t<p class=\"pinyin\">\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t{props.pinyin}\n\t\t\t\t\t</strong>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div class={`trans trans-margin-${suffix}`}>\n\t\t\t\t<em>\n\t\t\t\t\t{props.trans}\n\t\t\t\t</em>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n// ā á ǎ à ō ó ǒ ò ē é ě è ī í ǐ ì ū ú ǔ ù ǖ ǘ ǚ  ǜ  ü\n\nconst covid_words = [\n\t[\"新冠\",\"新冠\",\"xīn guān\",\"novel coronavirus\"],\n\t[\"新冠病毒\",\"新冠病毒\", \"xīn guān bìng dú\", \"novel coronavirus\"],\n\t[\"新冠肺炎\", \"新冠肺炎\", \"xīn guān fèi yán\", \"COVID-19\"],\n\t[\"检测\", \"檢測\", \"jiǎn cè\", \"test\"],\n\t[\"核酸检测\", \"核酸檢測\", \"hé suān jiǎn cè\", \"test\"],\n\t[\"阳性\", \"陽性\", \"yáng xìng\", \"positive (medicine)\"],\n\t[\"阴性\", \"隱性\", \"yǐng xìng\", \"negative (medicine)\"],\n];\n\nfunction Words(props) {\n\tvar all_words = covid_words;\n\tvar items = []\n\tfor (const [index, value] of all_words.entries()) {\n\t\tconst [simp, trad, pinyin, trans] = value\n\t\titems.push(\n\t\t\t<Word\n\t\t\t\tsimplified={simp}\n\t\t\t\ttraditional={trad}\n\t\t\t\tpinyin={pinyin}\n\t\t\t\ttrans={trans}/>\n\t\t);\n\t}\n\treturn (\n    \t<div>\n      \t\t{items}\n    \t</div>\n  \t);\n}\n\nexport default Words;\n"]},"metadata":{},"sourceType":"module"}