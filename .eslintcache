[{"/Users/dianjin/Documents/revolutionarychinese.github.io/src/index.js":"1","/Users/dianjin/Documents/revolutionarychinese.github.io/src/reportWebVitals.js":"2","/Users/dianjin/Documents/revolutionarychinese.github.io/src/App.js":"3","/Users/dianjin/Documents/revolutionarychinese.github.io/src/words/words.js":"4","/Users/dianjin/Documents/revolutionarychinese.github.io/src/headline/headline.js":"5"},{"size":500,"mtime":1607886935939,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607886935941,"results":"8","hashOfConfig":"7"},{"size":2316,"mtime":1608049226844,"results":"9","hashOfConfig":"7"},{"size":1478,"mtime":1608064376006,"results":"10","hashOfConfig":"7"},{"size":613,"mtime":1607999354962,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1yf56yu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/dianjin/Documents/revolutionarychinese.github.io/src/index.js",[],["25","26"],"/Users/dianjin/Documents/revolutionarychinese.github.io/src/reportWebVitals.js",[],"/Users/dianjin/Documents/revolutionarychinese.github.io/src/App.js",["27","28","29"],"import logo from './logo.svg';\nimport './App.css';\nimport html2canvas from 'html2canvas';\nimport React, { useState, useEffect } from 'react';\n\n// My components\nimport Headline from './headline/headline.js'\nimport Words from './words/words.js'\n\nfunction saveCanvases() {\n  var canvases = document.querySelectorAll(\"canvas\");\n    function downloadCanvas(canvas) {\n    // Convert the canvas to data\n    var image = canvas.toDataURL();\n    // Create a link\n    var aDownloadLink = document.createElement('a');\n    // Add the name of the file to the link\n    aDownloadLink.download = 'canvas_image.png';\n    // Attach the data to the link\n    aDownloadLink.href = image;\n    // Get the code to click the download link\n    aDownloadLink.click();\n  }\n  canvases.forEach(downloadCanvas);\n\n}\n\nfunction ChineseWords() {\n    return (\n      <div>\n      <Words/>\n      {/* <Words\n        simplified=\"共产主义\"\n        traditional=\"共產主義\"\n        pinyin=\"gòng chǎn zhǔ yì\"\n        trans=\"communism\"\n      />\n      <Words\n        simplified=\"共产主\"\n        traditional=\"共產主\"\n        pinyin=\"gòng chǎn zhǔ\"\n        trans=\"communism\"\n      />\n      <Words\n        simplified=\"共产\"\n        traditional=\"共產\"\n        pinyin=\"gòng chǎn\"\n        trans=\"communism\"\n      /> */}\n      </div>\n    );\n}\n\nfunction App() {\n  useEffect(() => {\n    // Update the document title using the browser API\n    var canvases = document.querySelectorAll(\".container\");\n    function appendCanvas(canvas) {\n      html2canvas(canvas).then(canvas => {\n        console.log(\"canvas\")\n        document.querySelector(\".canvas\").appendChild(canvas)\n      });\n    }\n    canvases.forEach(appendCanvas);\n  });\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <ChineseWords/>\n          {/* <Headline/> */}\n        </div>\n        <button onClick={saveCanvases}>\n        download images\n        </button>\n        <div class=\"canvas\">\n        </div>\n        {/* <p>\n          lol <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/dianjin/Documents/revolutionarychinese.github.io/src/words/words.js",["30","31"],"/Users/dianjin/Documents/revolutionarychinese.github.io/src/headline/headline.js",["32"],"// import logo from './logo.svg';\nimport './headline.css';\n\nconst villains = [\"1\", \"2\", \"3\"]\n\nfunction SingleComponent(props) {\n  return (\n    <div className={`container common ${props.type}`}>\n      {props.label}\n    </div>\n  );\n}\n\nfunction Headline(props) {\n  var items = []\n  for (const [index, value] of villains.entries()) {\n      items.push(\n        <div className=\"flexbox\">\n          <SingleComponent type=\"villain\" label={value}/>\n          {/* <SingleComponent type=\"villain\" label={value}/> */}\n        </div>\n      );\n  }\n  return (\n    <div>\n      {items}\n    </div>\n  );\n}\n\nexport default Headline;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":4,"column":17,"nodeType":"39","messageId":"40","endLine":4,"endColumn":25},{"ruleId":"37","severity":1,"message":"42","line":7,"column":8,"nodeType":"39","messageId":"40","endLine":7,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":6,"column":34,"nodeType":"45","messageId":"46","endLine":6,"endColumn":36},{"ruleId":"37","severity":1,"message":"47","line":47,"column":14,"nodeType":"39","messageId":"40","endLine":47,"endColumn":19},{"ruleId":"37","severity":1,"message":"47","line":16,"column":15,"nodeType":"39","messageId":"40","endLine":16,"endColumn":20},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Headline' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'index' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]